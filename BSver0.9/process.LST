C166 COMPILER V7.53.0.0, PROCESS                                                           04/17/2017 11:13:05 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE PROCESS
OBJECT MODULE PLACED IN process.OBJ
COMPILER INVOKED BY: C:\Keil\C166\BIN\C166.EXE process.c XLARGE BROWSE MOD167 DEBUG TABS(2) 

 stmt lvl     source

    1         #include "process.h"
    2         #include "protocol.h"
    3         #include "devices.h"
    4         #include "settings.h"
    5         
    6         //–±–ª–æ–∫–∏
    7         #include "bdmg.h"
    8         #include "bdgp.h"
    9         #include "bdsp.h"
   10         //
   11         #include "can.h"
   12         
   13         uint8 processByte;  //–±–∞–π—Ç —Å—Ç–∞—Ç—É—Å–∞ –ò–ú–î_–ë
   14         
   15         __IO float  counter = 0;
   16         __IO static uint32  mainCounter = 0;
   17         
   18         static tProcessDoseExceeded     ProcessDoseExceeded;
   19         static tProcessDoseRateExceeded ProcessDoseRateExceeded;
   20         void  Process_Initializetion(void)
   21         {
   22  1          processByte = 0;
   23  1          mainCounter = 0;
   24  1        
   25  1        memset((uint8*)&ProcessDoseExceeded,0,sizeof(tProcessDoseExceeded));
   26  1        memset((uint8*)&ProcessDoseRateExceeded,0,sizeof(tProcessDoseRateExceeded));
   27  1        
   28  1      
   29  1      }
   30         void  Process_SetStatus(IMDB_Status Status) //—Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å –ò–ú–î–ë
   31         { 
   32  1        
   33  1        processByte = processByte & 0xF0;
   34  1        processByte = processByte | Status;
   35  1        
   36  1      }
   37         void  Process_BDGPStatus(Device_Status Status)  //—Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å –ë–î–ì–ü
   38         {
   39  1        if(Status)
   40  1          SET_BIT(processByte,4);
   41  1        else
   42  1          CLEAR_BIT(processByte,4);
   43  1        
   44  1        
   45  1      }
   46         void  Process_BDMGStatus(Device_Status Status)  //—Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å –ë–î–ú–ì
   47         {
   48  1        if(Status)
   49  1          SET_BIT(processByte,5);
   50  1        else
   51  1          CLEAR_BIT(processByte,5);
   52  1      }
   53         void  Process_BDPSStatus(Device_Status Status)  //—Å—Ç–∞—Ç—É—Å –¥–ª—è –ë–î–ì–ü-–°
   54         {
   55  1        CLEAR_BIT(processByte,6);
C166 COMPILER V7.53.0.0, PROCESS                                                           04/17/2017 11:13:05 PAGE 2   

   56  1        CLEAR_BIT(processByte,7);
   57  1        
   58  1        
   59  1        if(Status == DEVICE_WAITING)
   60  1          SET_BIT(processByte,7);
   61  1        if(Status == DEVICE_READY)
   62  1          SET_BIT(processByte,6);
   63  1      }
   64         uint8 Process_GetBDMGState()
   65         {
   66  1        if( ((processByte >> 5) & 0x1))return 1;
   67  1        else return 0;
   68  1      }
   69         uint8 Process_GetBDGPState()
   70         {
   71  1        if( ((processByte >> 4) & 0x1))return 1;
   72  1        else return 0;
   73  1      }
   74         uint8 Process_GetBDPSStatus()
   75         {
   76  1        if( ((processByte >> 6) & 0x1))return 1;      //ready
   77  1        else if( ((processByte >> 7) & 0x1))return 2; //waiting
   78  1        else return 0;
   79  1      }
   80           
   81         
   82         uint8 Process_GetInfo() //–ø–æ–ª—É—á–∞–µ–º –±–∞–π—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ò–ú–î–ë
   83         {
   84  1        return processByte;
   85  1      }
   86         
   87         
   88         IMDB_Status Process_GetOperationMode()
   89         {
   90  1        return (processByte & 0x0F);
   91  1      }
   92         
   93         void  Process_MainProc()  interrupt 0x20
   94         {
   95  1        float insideDoseRate = 0;
   96  1        float outsideDoseRate = 0;
   97  1        float insideDose = 0;
   98  1        
   99  1        float fBackgroundQuantile = 0;
  100  1        uint8 identificationValue = 0;
  101  1        
  102  1        //IMDB_SendPacket(IMDB_PING,0,0);
  103  1        /*pCanInfo = (uint8*)malloc(sizeof(uint8) * 64);
  104  1        
  105  1        if(pCanInfo)
  106  1        {
  107  1          for(i = 0;i<8;i++)
  108  1          {
  109  1            
  110  1            
  111  1            *((uint16*)&msgData[0]) = CAN_Message_16[i].MODATALL;
  112  1            *((uint16*)&msgData[2]) = CAN_Message_16[i].MODATALH;
  113  1            *((uint16*)&msgData[4]) = CAN_Message_16[i].MODATAHL;
  114  1            *((uint16*)&msgData[6]) = CAN_Message_16[i].MODATAHH;
  115  1            
  116  1            memcpy(pCanInfo + ( i * 8),(uint8*)msgData,sizeof(uint8) * 8);
  117  1          
C166 COMPILER V7.53.0.0, PROCESS                                                           04/17/2017 11:13:05 PAGE 3   

  118  1            
  119  1          }
  120  1          IMDB_SendPacket(IMDB_PING,(uint8*)pCanInfo,sizeof(uint8) * 64);
  121  1          free(pCanInfo);
  122  1        }*/
  123  1        
  124  1        switch(Process_GetOperationMode())
  125  1        {
  126  2            case IMDB_INITIALIZATION:
  127  2            {
  128  3              //3 —Å–µ–∫ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  129  3              if(mainCounter == 3)
  130  3              {
  131  4                
  132  4                
  133  4                /*
  134  4                1. –ï—Å–ª–∏ –µ—Å—Ç—å –ë–î–ì–ü, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ú–î —Å–Ω–∞—Ä—É–∂–∏.
  135  4                2. –ï—Å–ª–∏ –ú–î –º–µ–Ω—å—à–µ 0.1–º–ì—Ä/—á, —Ç–æ –≤–∫–ª—é—á–∞–µ–º HV –¥–ª—è –§–≠–£
  136  4                3. –ï—Å–ª–∏ –ë–î–ì–ü –Ω–µ—Ç, —Ç–æ –º–µ—Ä—è–µ–º –ú–î –ë–î–ì–ú–æ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø2 —Å —É—á—ë—
             -Ç–æ–º –ö–≠.
  137  4                */
  138  4                //–∏—â–µ–º —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä
  139  4                if(Process_GetBDPSStatus())
  140  4                {
  141  5                  //–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–º–µ—Ä–∏—Ç—å –≤–Ω–µ—à–Ω—é—é –ú–î –ø–µ—Ä–µ–¥ 
             -–≤–∫–ª—é—á–µ–Ω–∏–µ–º
  142  5                    if(Process_GetBDGPState() ){//–ë–î–ì–ü –æ–±–Ω–∞—Ä—É–∂–µ–Ω
  143  6                      BDGP_Start(); //–∑–∞–ø—É—Å–∫–∞–µ–º –ë–î–ì–ü
  144  6                    }
  145  5                    else if(Process_GetBDMGState() ){//–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Ç–æ –º–µ—Ä—è–µ–º –ë–î–ú–ì–æ–º
  146  6                      BDMG_Start();
  147  6                      
  148  6                    }
  149  5                    //–µ—Å–ª–∏ –Ω–µ—Ç –æ–±–æ–∏—Ö –¥–æ–∑–∏–º–µ—Ç—Ä–æ–≤ —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –∫–æ–Ω—Ç—Ä–
             -æ–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  150  5                    else {
  151  6                      Process_SetStatus(IMDB_OPERATION_CONTROL);
  152  6      //                IMDB_SendState();
  153  6                    }
  154  5                }
  155  4                else{
  156  5                  //–µ—Å–ª–∏ —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä–∞ –Ω–µ—Ç
  157  5                  if(!Process_GetBDGPState() && !Process_GetBDMGState())//–ò –ë–î —Ç–æ–∂–µ –Ω–µ—Ç, —Ç–æ –≤—ã–¥–∞—ë–º —
             -Å—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –Ω–µ–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
  158  5                    IMDB_SendReady();
  159  5                }
  160  4                
  161  4                Process_SetStatus(IMDB_OPERATION_CONTROL);
  162  4                
  163  4      //          IMDB_SendState();
  164  4                
  165  4              }
  166  3            }break;
  167  2            
  168  2            case IMDB_OPERATION_CONTROL:
  169  2            {       
  170  3              //–µ—â—ë 10 —Å–µ–∫ –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–π –ú–î
  171  3              
  172  3              //–µ—Å–ª–∏ –µ—Å—Ç—å —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä, —Ç–æ –∂–¥—ë–º –∑–∞–º–µ—Ä–∞ –ú–î, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –µ
             -—ë –∏ –¥–∞—ë–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –Ω–∏–º
  173  3              /*
  174  3              */
C166 COMPILER V7.53.0.0, PROCESS                                                           04/17/2017 11:13:05 PAGE 4   

  175  3              if(Process_GetBDPSStatus())
  176  3              {
  177  4                //–∑–∞–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä–∞
  178  4                /*if(mainCounter == 4)
  179  4                  BDSP_SetParametrs();*/
  180  4                
  181  4                if(mainCounter == 10){
  182  5                  BDGP_Stop();
  183  5                  BDMG_Stop();
  184  5                  
  185  5                  //–∑–∞–∫–æ–Ω—á–∏–ª–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è, —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω—é—é –ú–î.
  186  5                  if(Process_GetBDGPState() ){
  187  6                    outsideDoseRate = BDGP_GetAverageDoseRate();
  188  6                  }
  189  5                  else if(Process_GetBDMGState()){
  190  6                    outsideDoseRate = BDMG_GetCurrentDose() * MainSettings.shieldingFactor; //–µ—Å–ª–∏ –Ω–µ—Ç –ë–î–ì–ü,
             - —Ç–æ —Å—á–∏—Ç–∞–µ–º –ú–î –≤–Ω–µ—à, –∫–∞–∫ –ú–î –≤–Ω—É—Ç—Ä–∏ * –ö–≠
  191  6                  }
  192  5                  else{
  193  6                    outsideDoseRate = 0;  //TODO –ø–æ–ª—É—á–∏—Ç—å –ú–î —Å–æ —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä–∞
  194  6                  }
  195  5                }
  196  4                //–æ–∂–∏–¥–∞–µ–º —Å—Ç–∞–±–∏–ª–∏–∂–∞—Ü–∏–∏
  197  4                if(mainCounter > 10 && mainCounter < 70)
  198  4                {
  199  5                  if(Process_GetBDPSStatus() == DEVICE_READY)//–¥–æ–∂–¥–∞–ª–∏—Å—å —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –ë–î–ì–ü-–°
  200  5                  {
  201  6                    Process_SetStatus(IMDB_BACKGROUND_ACCUMULATION);
  202  6                    BDSP_Start(); //–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä
  203  6                    
  204  6                    
  205  6                    IMDB_SendReady();
  206  6      //              IMDB_SendState();
  207  6                  }
  208  5                }
  209  4              }
  210  3              //–≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º —à—Ç–∞—Ç–Ω–æ–π —Ä–∞–±
             -–æ—Ç—ã –±–µ–∑ —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç—Ä–∞
  211  3              else
  212  3              {
  213  4                /*
  214  4                  TODO —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ë–î–ú–ì-–ë, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ –Ω–∞–∫
             -–æ–ø–ª–µ–Ω–∏—è —Ñ–æ–Ω–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º –æ–¥–Ω–æ–º –±–ª–æ–∫–µ
  215  4                */
  216  4                if(Process_GetBDGPState() || Process_GetBDMGState())
  217  4                { 
  218  5                  Process_SetStatus(IMDB_BACKGROUND_ACCUMULATION);
  219  5                  Process_IMDBStart();
  220  5                  
  221  5                  IMDB_SendReady();
  222  5      //            IMDB_SendState();
  223  5                }
  224  4                //–Ω–∏—á–µ–≥–æ –Ω–µ—Ç, —à–ª—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –Ω–æ –Ω–µ —à–ª–µ–º —Å–æ–±—ã—
             -Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ò–ú–î–ë
  225  4                else
  226  4                {
  227  5                  
  228  5                    
  229  5                }
  230  4              }
  231  3              
  232  3            }break;
C166 COMPILER V7.53.0.0, PROCESS                                                           04/17/2017 11:13:05 PAGE 5   

  233  2            
  234  2            case IMDB_BACKGROUND_ACCUMULATION:
  235  2            {
  236  3              
  237  3            }break;
  238  2            
  239  2            case IMDB_FULLTIME_WORK:
  240  2            {
  241  3              /*
  242  3                –†–µ–∂–∏–º —à—Ç–∞—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã
  243  3              
  244  3                - –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –º–æ—â–Ω–æ—Å—Ç–∏ –¥–æ–∑—ã —Å–Ω–∞—Ä—É–∂–∏ –∏ –≤–Ω—É—Ç—Ä–∏
  245  3                - –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ú–î –≤–∫–ª—é—á–∞–µ–º –∏–ª–∏ –≤—ã–∫–ª—é—á–∞–µ–º —Å–ø–µ–∫—Ç—Ä–æ–º–µ—Ç
             -—Ä
  246  3                - –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—Å—á—ë—Ç–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ø–æ—Ä–æ–≥–∞ –ø–æ —Ñ–æ–Ω—É
  247  3              */
  248  3              //–≤—ã—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ú–î
  249  3              
  250  3      
  251  3                
  252  3                //–µ—Å–ª–∏ –µ—Å—Ç—å –ë–î–ì–ü-–ë
  253  3                if(Process_GetBDGPState() == DEVICE_READY){         
  254  4                    outsideDoseRate = BDGP_GetAverageDoseRate();//–ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ú–î
  255  4                
  256  4                      
  257  4                }
  258  3                else
  259  3                    outsideDoseRate = BDMG_GetCurrentDose() * MainSettings.shieldingFactor;
  260  3                
  261  3                if(Process_GetBDMGState() == DEVICE_READY)
  262  3                    insideDoseRate = BDMG_GetCurrentDose();
  263  3                else
  264  3                  insideDoseRate = BDGP_GetAverageDoseRate() / MainSettings.shieldingFactor;
  265  3                
  266  3                  insideDose = BDMG_GetDose();
  267  3                  
  268  3                    //—Å–æ–±—ã—Ç–∏—è –ø–æ—Ä–æ–≥–æ–≤ –ø–æ –ú–î
  269  3                    //–ø–æ—Ä–æ–≥ 1
  270  3                    if(outsideDoseRate > MainSettings.limitDetect[1]){
  271  4                      
  272  4                      if(!ProcessDoseRateExceeded.rRangeFlag[0]){
  273  5                        IMDB_SendDoseRateExceeded(1);
  274  5                        ProcessDoseRateExceeded.rRangeFlag[0] = 1;
  275  5                        }
  276  4                    }
  277  3                    else{
  278  4                      if(ProcessDoseRateExceeded.rRangeFlag[0] == 1){
  279  5                        ProcessDoseRateExceeded.rRangeFlag[0] = 0;
  280  5                        IMDB_SendDoseRateExceeded(0);
  281  5                      }
  282  4                    }
  283  3                    //–ø–æ—Ä–æ–≥ 2
  284  3                    if(outsideDoseRate > MainSettings.limitDetect[2]){
  285  4                      
  286  4                      if(!ProcessDoseRateExceeded.rRangeFlag[1]){
  287  5                        IMDB_SendDoseRateExceeded(2);
  288  5                        ProcessDoseRateExceeded.rRangeFlag[1] = 1;
  289  5                      }
  290  4                    }
  291  3                    else{
  292  4                      if(ProcessDoseRateExceeded.rRangeFlag[1] == 1){
  293  5                        ProcessDoseRateExceeded.rRangeFlag[1] = 0;
C166 COMPILER V7.53.0.0, PROCESS                                                           04/17/2017 11:13:05 PAGE 6   

  294  5                        IMDB_SendDoseRateExceeded(0);
  295  5                      }
  296  4                    }
  297  3                    //–ø–æ—Ä–æ–≥ 3
  298  3                    if(outsideDoseRate > MainSettings.limitDetect[3]){
  299  4                      
  300  4                      if(!ProcessDoseRateExceeded.rRangeFlag[2]){
  301  5                      IMDB_SendDoseRateExceeded(3);
  302  5                      ProcessDoseRateExceeded.rRangeFlag[2] = 1;
  303  5                      }
  304  4                    }
  305  3                    else{
  306  4                      if(ProcessDoseRateExceeded.rRangeFlag[2] == 1){
  307  5                        ProcessDoseRateExceeded.rRangeFlag[2] = 0;
  308  5                        IMDB_SendDoseRateExceeded(0);
  309  5                      }
  310  4                    }
  311  3                    //–ø–æ—Ä–æ–≥ 4
  312  3                    if(outsideDoseRate > MainSettings.limitDetect[4]){
  313  4                      
  314  4                      if(!ProcessDoseRateExceeded.rRangeFlag[3]){
  315  5                        IMDB_SendDoseRateExceeded(4);
  316  5                        ProcessDoseRateExceeded.rRangeFlag[3] = 1;
  317  5                      }
  318  4                    }
  319  3                    else{
  320  4                      if(ProcessDoseRateExceeded.rRangeFlag[3] == 1){
  321  5                        ProcessDoseRateExceeded.rRangeFlag[3] = 0;
  322  5                        IMDB_SendDoseRateExceeded(0);
  323  5                      }
  324  4                    }
  325  3                    /*
  326  3                    //–ø–æ—Ä–æ–≥ 5
  327  3                    if(outsideDoseRate > MainSettings.limitDetect[5]){
  328  3                      if(!ProcessDoseRateExceeded.rRangeFlag[4]){
  329  3                        IMDB_SendDoseRateExceeded(6);
  330  3                        ProcessDoseRateExceeded.rRangeFlag[4] = 1;
  331  3                      }
  332  3                    }
  333  3                    else{
  334  3                      if(ProcessDoseRateExceeded.rRangeFlag[4] == 1){
  335  3                        ProcessDoseRateExceeded.rRangeFlag[4] = 0;
  336  3                        IMDB_SendDoseRateExceeded(0);
  337  3                      }
  338  3                    }
  339  3                    */
  340  3      
  341  3                    
  342  3                    //–≤—ã—Å—ã–ª–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ—Ä–æ–≥–∞ –ø–æ –î–æ–∑–µ
  343  3                    if(insideDose > MainSettings.limitDetect[6])
  344  3                      if(ProcessDoseExceeded.rRangeFlag[0] == 0){
  345  4                        ProcessDoseExceeded.rRangeFlag[0] = 1;
  346  4                          IMDB_SendDoseExceeded(1);
  347  4                      }
  348  3                      
  349  3                    if(insideDose > MainSettings.limitDetect[7])
  350  3                      if(ProcessDoseExceeded.rRangeFlag[1] == 0){
  351  4                        ProcessDoseExceeded.rRangeFlag[1] = 1;
  352  4                          IMDB_SendDoseExceeded(2);
  353  4                      }
  354  3                  
  355  3                    if(insideDose > MainSettings.limitDetect[8])
C166 COMPILER V7.53.0.0, PROCESS                                                           04/17/2017 11:13:05 PAGE 7   

  356  3                      if(ProcessDoseExceeded.rRangeFlag[2] == 0){
  357  4                        ProcessDoseExceeded.rRangeFlag[2] = 1;
  358  4                          IMDB_SendDoseExceeded(3);
  359  4                      }
  360  3                    
  361  3                    if(insideDose > MainSettings.limitDetect[9])
  362  3                      if(ProcessDoseExceeded.rRangeFlag[3] == 0){
  363  4                        ProcessDoseExceeded.rRangeFlag[3] = 1;
  364  4                          IMDB_SendDoseExceeded(4);
  365  4                      }
  366  3                      
  367  3      
  368  3                
  369  3                
  370  3            }break;
  371  2            
  372  2            case IMDB_SPECTR_ACCUMULATION:
  373  2            {
  374  3      
  375  3                
  376  3            }break;
  377  2        }
  378  1        mainCounter++;
  379  1        
  380  1      
  381  1      }
  382         
  383         void  Process_IMDBStart()
  384         {
  385  1        BDGP_Start();
  386  1        BDMG_Start();
  387  1        BDSP_Start();
  388  1      }
  389         void  Process_IMDBStop()
  390         {
  391  1        BDGP_Stop();
  392  1        BDMG_Stop();  
  393  1        BDSP_Stop();
  394  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =        1172     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =          19     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =          16     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
